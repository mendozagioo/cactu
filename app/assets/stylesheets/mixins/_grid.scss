//
// MIXINS/GRID
// --------------------------------------------------


@mixin grid_generator($size_col: 0, $gutter: 0, $max_cols: 12) {
  @if $size_col == 0 and $gutter == 0 {
    .row {
      margin: 0 5%;
      width: 90%;
    }

    [class *= "-column"] {
      overflow: hidden;
      float: left;
      margin: 0;
      width: 100%;
    }
  }

  @else if ($size_col + $gutter) < 81 {
    $gm_margin: gutter_columns($size_col, $gutter, $max_cols);

    .row {
      width: 100%;
    }

    [class *= "-column"] {
      overflow: hidden;
      float: left;
      //margin-left: gutter_columns($size_col, $gutter, $max_cols);
      //margin-right: gutter_columns($size_col, $gutter, $max_cols);
    }

    @for $i from 1 through $max_cols {
      $col_width: width_column($i, $size_col, $gutter);
      $sizer: grid_size($size_col, $gutter, $max_cols);
      .#{numbers($i)}-columns { width: percentage($col_width / $sizer); }
    }
  }

  @else {
    .row {
      width: grid_size($size_col, $gutter, $max_cols);
    }

    [class *= "-column"] {
      overflow: hidden;
      float: left;
      margin-left: 0.0125%;
      margin-right: 0.0125%;
    }

    @for $i from 1 through $max_cols {
      $col_width: width_column($i, $size_col, $gutter);
      $sizer: grid_size($size_col, $gutter, $max_cols);
      @if $i == 1 {
        .one-column { width: percentage($col_width / $sizer); }
      } @else {
        .#{numbers($i)}-columns { width: percentage($col_width / $sizer); }
      }
    }
  }
}

@mixin grid_offset($size_col, $gutter, $max_cols: 12) {
  @for $i from 1 through $max_cols - 1 {
    $offset: ($i * $size_col) + ($i * $gutter) + ($gutter / 2);
    $sizer: grid_size($size_col, $gutter, $max_cols);
    .offset-#{numbers($i)} { margin-left: percentage($offset / $sizer); }
  }
}

@mixin grid_centered($size_col: 0, $gutter: 0, $max_cols: 12) {
  @for $i from 1 through $max_cols - 1 {
    $col_width: width_column($i, $size_col, $gutter);
    $sizer: grid_size($size_col, $gutter, $max_cols);
    $marger: ($sizer - $col_width) / 2;
    .centered-#{numbers($i)} {
      $margin_cent: percentage($marger / $sizer);
      margin-left: $margin_cent;
      margin-right: $margin_cent;
    }
  }
}
